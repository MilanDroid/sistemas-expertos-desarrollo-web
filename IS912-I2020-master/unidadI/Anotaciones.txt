Crear un servidor en NodeJS
1. Instalar NodeJS
2. Crear una carpeta para el proyecto
3. Ejecutar el comando npm init dentro de la carpeta
4. Instalar el modulo express con el comando 
    npm install --save express
 (npm: Node Package Manager)
5. Crear un archivo llamado index.js y codificar el servidor.
6. Ejecutar el servidor utilizando
    node index.js

JSON (Javascript Object Notation):

CSV:
    Juan,Perez,25,Masculino,12/12/2012

XML:
    <persona>
        <nombre>Juan</nombre>
        <apellido>Perez</apellido>
        <edad>25</edad>
        <genero>Masculino</genero>
        <fecha>
            <dia>12</dia>
            <mes>12</mes>
            <anio>2012</anio>
        </fecha>
    </persona>

JSON
persona={
    nombre:"Juan",
    apellido:"Perez",
    edad:"25",
    genero:"Masculino",
    fecha:{
        dia:12,
        mes:12,
        anio:2012
    }
}


CSS (Cascading Style Sheets)
Formas de aplicar CSS:
    En linea: Se aplica utilizando la PROPIEDAD style sobre la etiqueta.
    Los estilos se definen utilizando la siguiente sintaxis:
        nombre-estilo1:valor-estilo1;nombre-estilo2:valor-estilo2;...;nombre-estiloN:valor-estiloN;
    En el encabezado: Se aplica los estilos dentro de la ETIQUETA style, comunmente situada dentro de la etiqueta head
        Para aplicar los estilos se utilizan identificadores denominados SELECTORES
        Los selectores pueden ser:
            -Por etiqueta: A todas las etiquetas de dicho tipo se les aplicarian los estilos indicados
            -Por ID: Se aplican los estilos a la etiqueta con dicho ID. Para hacer referencia a un id se utiliza el prefijo # (numeral)
            -Por clase CSS
        
        La sintaxis para aplicar los estilos utilizando selectores es:
            selector{
                nombre-estilo1:valor-estilo1;
                nombre-estilo2:valor-estilo2;
                ...
                nombre-estiloN:valor-estiloN;
            }
    Archivo externo: Se incluyen utilizando la etiqueta 
        <link rel="stylesheet" href="RUTA">

Prioridades CSS

1. Estilos en linea
2. Estilos por ID
3. Estilos por clase CSS
4. Estilos por nombre de etiqueta

Se puede forzar la prioridad con important.


Media Query (Consulta a medios): Consulta a las caracteristicas del medio para condicionar los estilos y adaptar el contenido dependiendo del tamaño de la pantalla. A esto se le conoce como sitios web responsivos o adaptables a difentes tamaños (Responsive Websites).

@media


Bootstrap
Angular
un poquito de SASS y SCSS


Angular: Frontend framework

Componentes: Sidebar, Menu, Formulario, Galeria


Un componente en angular tiene tres archivos principales:
.html
.css
.ts  (Typescript=>Microsoft)

Por defecto en angular se crea el componente app

nombre.component.extension
app.component.html
app.component.css
app.component.ts



Informacion persistente del lado del cliente:
cookies
LocalStorage
SessionStorage
WebSQL (SQLite) -> Deprecado
IndexedDB (BD NoSQL)